
var userClickedPattern=[];       // stores the pattern of the user
var buttonColors =["red","blue","green","yellow"];
var gamePattern=[];               // stores the sequnce generated by the machine

// for detecting when any keyboard key has been pressed for the first time
var started=false;
var level=0;

$(document).keydown(function(){
  if(!started){
    $("#level-title").text("Level "+level);
    nextSequence();
    started=true;
  }
});

// for user events and to store the sequence genrated by the user
$(".btn").click(function(){
  // var userChosenColor = $(this).attr("id");
  var userChosenColor=this.id;
  userClickedPattern.push(userChosenColor);

  animatePress(userChosenColor);
  playSound(userChosenColor);
  checkAnswer(userClickedPattern.length-1);
});

function animatePress(currentColor){
  $("."+currentColor).addClass("pressed");
  setTimeout(function(){
    $("."+currentColor).removeClass("pressed");
  },100);
}

// for playing the audio
function playSound(name){
  var audio = new Audio("sounds/"+name+".mp3");
  audio.play();
}

// for gereating the next sequence of the game by the machine
function nextSequence(){

  userClickedPattern = [];

  level+=1;
  $("#level-title").text("Level "+level);

  console.log("Next Function is being called");    // remove this once the project is completed
  randomNumber=Math.floor(Math.random()*4);

  var randomChosenColour=buttonColors[randomNumber];
  gamePattern.push(randomChosenColour);

  $("#"+randomChosenColour).fadeOut(100);
  $("#"+randomChosenColour).fadeIn(100);
  $("#"+randomChosenColour).fadeIn(100);

  // Also a way for the pressed animation effect
  // but the animation are of grey color as specified in the pressed clss in our styles.css file
  // for black animation use fadeIn and fadeOut
  // $("."+randomChosenColour).addClass("pressed");
  // setTimeout(function(){
  //   $("."+randomChosenColour).removeClass("pressed");
  // },50);

  // var audio = new Audio("sounds/"+randomChosenColour+".mp3");
  // audio.play();
  playSound(randomChosenColour);
}

// to check whether the sequence by the user is correct or note
function checkAnswer(currentLevel){
  if(userClickedPattern[currentLevel]==gamePattern[currentLevel]){
    console.log("success");

    if (userClickedPattern.length === gamePattern.length){

        //5. Call nextSequence() after a 1000 millisecond delay.
        setTimeout(function () {
          nextSequence();
        }, 1000);

      }
    // return "success";
  }else{
    playSound("wrong");

    $("body").addClass("game-over");
    setTimeout(function(){
      $("body").removeClass("game-over");
    },200);

    $("#level-title").text("Game Over, Press Any Key to Restart");
    console.log("wrong");

    startOver();
    // return "wrong";
  }
}


function startOver(){
  level=0;
  gamePattern=[];
  started=false;
}
